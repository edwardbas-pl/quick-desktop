#!/bin/bash
BROWSER='firefox'
TERMINAL='kitty'
FM='nemo' #GUI file manager
TFM='ranger' #terminal file manager
COMPOSITOR='picom'
CLIPBOARD_MANAGER='xclip'
OTHER=" numlockx qbittorrent gimp playerctl "
TERMINAL_APPS=" git rar dialog ranger gtop htop vim udisks2 "
GUI_backend="xclip spectacle pulseaudio pavucontrol feh w3m alsa-firmware apulse pulseaudio-alsa alsa-oss nodejs"
GUI=" lxsession nemo xorg polybar lxsession dunst lxappearance yad xdotool"
office_suite=" libreoffice galculator "
multimedia_player="mpv"

function init_detect () {
	PS=$( ps --pid 1 | grep -q systemd && echo 'systemd' || echo 'init' )
	if [[ $PS == *systemd* ]]; 
	then 
		INIT="systemd";
	elif [[ $PS == *init* ]];
	then
		INIT="openrc"
	elif [[ $PS == *runit* ]];
	then
		INIT="runit"

	elif [[ $PS == *s6* ]];
	then
		INIT="s6"
	else 
		INIT="cannot tell"; 
	fi

}

if [[ -f /usr/bin/zypper ]];
then
	sudo zypper --non-interactive install wget dialog curl
elif [[ -f /usr/bin/pacman ]];
then
	sudo pacman -Sy wget dialog curl --noconfirm
elif [[ -f /usr/bin/apt ]];
then
	sudo apt install wget dialog curl -y
fi


CHOICE=$(dialog --clear --title "Okno dialogowe Checklist" --backtitle "BASH" --checklist "Optional support for:" 11 40 4  GNOME "Minimal gnome-shell instalation" "off" dwm "dwm windowm manager by suckless.org" "off" bspwm "bspwm tiling window manager" "off" i3 "i3 tiling window manager" "off" --stdout)

#echo $CHOICE


DISTRO=$(hostnamectl | grep 'Operating System' | awk '{print $3 $4 $5}')
if [[ -f /usr/bin/zypper ]];
then
	alias manager='sudo zypper --non-interactive --gpg-auto-import-keys'
	echo "you are on $DISTRO"
	sudo zypper refresh
	sudo zypper --non-interactive addrepo https://download.opensuse.org/repositories/openSUSE:Factory/standard/openSUSE:Factory.repo 
	sudo zypper --non-interactive refresh
	sudo zypper --non-interactive install slick-greeter


	if [[ $CHOICE == *dwm* ]]	
	then 
		echo 'dwm'
	fi

	if [[ $CHOICE == *bspwm* ]]
	then 
		echo 'bspwm'
	fi


	if [[ $CHOICE == *i3* ]]
	then 
		echo 'i3'
	fi

elif [[ -f /usr/bin/pacman ]];
then
	echo "you are on $DISTRO"
	if [[ ! -f /usr/bin/yay ]]
	then
		echo "YAY is not installed... instaling"
		sudo pacman -Sy git --noconfirm
		cd
		git clone https://aur.archlinux.org/yay-git.git
		cd yay-git
		makepkg -si --noconfirm
		cd
		rm -rf yay-git
	fi
	
	if [[ -f /usr/bin/yay ]]
	then
		yay -S --noconfirm $BROWSER $TERMINAL $TERMINAL_APPS $FM $TFM $multimedia_player $CLIPBOARD_MANAGER $GUI_backend $office_suite
		
		if [[ $CHOICE == *dwm* ]]	
		then 
			echo 'dwm'
			git clone http://github.com/edwardbas-pl/dwm
			cd dwm
			make
			sudo make install
			yay -S  --noconfirm $GUI
		fi
		if [[ $CHOICE == *bspwm* ]]
		then 
			echo 'bspwm'
			yay -S   --noconfirm $GUI bspwm $COMPOSITOR
		fi
		if [[ $CHOICE == *i3* ]]
		then 
			echo 'i3'
			yay -S  --noconfirm $GUI i3-gaps $COMPOSITOR

		fi
		if [[ $CHOICE == *GNOME* ]]
		then 
			echo 'GNOME'
			yay -S --noconfirm gnome-shell gnome-control-center firefox-extension-gnome-shell-integration gnome-tweaks
			yay -S --noconfirm gnome-shell-extension-x11gestures touchegg
	
			if [[ $INIT == *systemd* ]];
			then
				sudo systemctl enable touchegg
			elif [[ $INIT == *init* ]];
			then
				yay -S --noconfirm touchegg-openrc
				artix-chroot /mnt rc-update add touchegg
	
			elif [[ $INIT  == *runit* ]];
			then
				yay -S --noconfirm touchegg-runit
				artix-chroot /mnt ln -s /mnt/etc/runit/sv/NetworkManager /mnt/run/runit/touchegg
			elif [[ $INIT == *s6* ]];
			then
				yay -S --noconfirm touchegg-s6
				artix-chroot /mnt s6-rc-bundle -c /etc/s6/rc/compiled add default touchegg
			fi

		fi
	else
		echo "erro ocured"
	fi

elif [[ -f /usr/bin/apt ]]; #if you are on debian based distro
then
	echo "you are on $DISTRO"
	if [[ $DISTRO ==  *Debian*  ]];
	then
		echo "debian based"
	else # if you are on ubundu derivtive
		echo "ubuntu based"
	fi
fi

#if gnome is installed it will also install some extensions

#if [[ $CHOICE == *GNOME* ]]
#then
#	wget https://raw.githubusercontent.com/brunelli/gnome-shell-extension-installer/master/gnome-shell-extension-installer
#	chmod +x gnome-shell-extension-installer
#	./gnome-shell-extension-installer
#
#fi

#deploy my dotfiles
cd
git clone https:://github.com/edwardbas-pl/backup
cd backup
./Restore
